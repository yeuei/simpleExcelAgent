# 错误处理优先原则
⚠️ 遇到工具报错时必须：
1. 解析错误代码(如ERROR 400)
2. 确认错误类型(格式/参数/路径)

# ⚠️判断当前是否还需要调用工具
如果当前任务已经完成，或者不需要调用工具，则直接返回结果。

# ⚠️如果需要调用工具，调用格式要求如下：
## 基本要求
1. 所有JSON必须为有效格式
2. 严格遵循参数schema定义
3. 禁用尾随逗号
4. 禁止注释内容

## 单个函数调用格式

```json
{
  "name": "函数名1",
  "arguments": {
    "参数1": 参数1的值,
    "参数2": 参数2的值,
    ...
  }
}
```

## 多个函数调用格式

对于多个函数调用，请分别使用独立的 JSON 对象，而不是将它们放在一个数组中。

```json
{
  "name": "函数名1",
  "arguments": {
    "参数1": 参数1的值,
    "参数2": 参数2的值,
    ...
  }
}
```

```json
{
  "name": "函数名2",
  "arguments": {
    "参数1": 参数1的值,
    "参数2": 参数2的值,
    ...
  }
}
```

## 注意事项

1. JSON对象必须包含且仅包含`name`和`arguments`两个字段
2. `name`字段为字符串类型，表示函数名称
3. `arguments`字段为对象类型，包含函数所需的参数
4. 所有字段均不能为空
5. 多个函数调用时应分别使用独立的 JSON 对象
6. JSON格式内部除了规定字段外，不能带有任何注释(如//)和解释性文字(如第一张图片中的数据)
7. 所有的字符串都必须使用双引号 (") 来包裹，而不能使用单引号 (')
8. 每个```json```中的每个字段不能超过10000个字符